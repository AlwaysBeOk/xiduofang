{"version":3,"sources":["components/angular/index.tsx","components/vue/index.tsx","components/react/index.tsx","App.tsx","serviceWorker.ts","stories/add.state.ts","index.tsx"],"names":["MyAngular","inject","observer","react_default","a","createElement","process","REACT_APP_CONST_INT","React","Component","MyVue","MyReact","Header","Sider","Content","SubMenu","App","state","collapsed","openKeys","handleClick","v","console","log","subMenuOpen","_this","setState","slice","length","toggle","layout","react_router_dom","trigger","collapsible","this","style","background","className","src","alt","width","height","menu","mode","defaultOpenKeys","onClick","onOpenChange","key","title","icon","type","Item","to","padding","margin","minHeight","react_router","path","component","Boolean","window","location","hostname","match","addState","num1","num2","observable","action","_this2","computed","ReactDOM","render","index_module","store","stores","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b88aa630.chunk.js","sourcesContent":["import React from 'react';\n\n\nimport { inject, observer } from 'mobx-react';\n\n@inject('store')\n@observer\nclass MyAngular extends React.Component<any> {\n  \n  \n  render() {\n    return (\n      <div>\n        Angular\n        <p>\n          通过 Web Worker 和服务端渲染，达到在如今(以及未来）的 Web 平台上所能达到的最高速度。<br/>\n          Angular 让你有效掌控可伸缩性。基于 RxJS、Immutable.js 和其它推送模型，能适应海量数据需求。<br/>\n          <span>{process.env.REACT_APP_CONST_INT}</span>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default MyAngular;\n","import React from 'react';\n\n\nimport { inject, observer } from 'mobx-react';\n\n@inject('store')\n@observer\nclass MyVue extends React.Component<any> {\n  \n  \n  render() {\n    return (\n      <div>\n        Vue\n        <p>20kB min+gzip, 运行大小超快虚拟, DOM最省心的优化</p>\n      </div>\n    );\n  }\n}\n\nexport default MyVue;\n","import React from 'react';\n\n\nimport { inject, observer } from 'mobx-react';\n\n@inject('store')\n@observer\nclass MyReact extends React.Component<any> {\n  \n  \n  render() {\n    return (\n      <div>\n        React\n        <p>\n          创建拥有各自状态的组件，再由这些组件构成更加复杂的 UI。<br/>\n          无论你现在正在使用什么技术栈，你都可以随时引入 React 来开发新特性，而不需要重写现有代码。\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default MyReact;\n","import React from 'react';\n\n// component\nimport MyAngular from 'components/angular/index';\nimport MyVue from 'components/vue/index';\nimport MyReact from 'components/react/index';\n\n// route\nimport { Route, Link, BrowserRouter, Switch } from 'react-router-dom';\n\n// style\nimport './App.scss';\n\n// antd\nimport { Layout, Menu, Icon } from 'antd';\nconst { Header, Sider, Content } = Layout;\nconst { SubMenu } = Menu;\n\n\nclass App extends React.Component {\n  state = {\n    collapsed: false,\n    openKeys: []\n  };\n  \n  handleClick = (v: any) => {\n    console.log('click ', v);\n  };\n  \n  subMenuOpen = (openKeys: string[]) => {\n    this.setState({openKeys: openKeys.slice(openKeys.length -1)}, () => {\n      console.log(this.state.openKeys);\n    })\n  }\n\n  toggle = () => {\n    if(this.state.collapsed){\n      this.setState({\n        collapsed: !this.state.collapsed,\n      });\n    }else {\n      this.setState({\n        collapsed: !this.state.collapsed,\n        // openKeys: []\n      });\n    }\n  };\n\n  render() {\n    return (\n    <Layout>\n      <BrowserRouter>\n        <Sider trigger={null} collapsible collapsed={this.state.collapsed} style={{ background: '#fff' }}>\n          <div className=\"logo\">\n            <img src=\"assets/logo.jpg\" alt=\"logo\" width={200} height={64}/>\n          </div>\n            <Menu\n              mode=\"inline\"\n              defaultOpenKeys={['sub1']}\n              onClick={this.handleClick}\n              onOpenChange={this.subMenuOpen}\n              openKeys={this.state.openKeys}\n            >\n              <SubMenu\n                key=\"sub1\"\n                title={\n                  <span>\n                  <Icon type=\"user\" />\n                  <span>angular</span>\n                </span>\n                }\n              >\n                <Menu.Item key=\"1\"><Link to=\"/angular1\">angular1</Link></Menu.Item>\n                <Menu.Item key=\"2\"><Link to=\"/angular2\">angular2</Link></Menu.Item>\n                <Menu.Item key=\"3\"><Link to=\"/angular3\">angular3</Link></Menu.Item>\n                <Menu.Item key=\"4\"><Link to=\"/angular4\">angular4</Link></Menu.Item>\n              </SubMenu>\n              <SubMenu\n                key=\"sub2\"\n                title={\n                  <span>\n                  <Icon type=\"laptop\" />\n                  <span>vue</span>\n                </span>\n                }\n              >\n                <Menu.Item key=\"5\"><Link to=\"/vue1\">vue1</Link></Menu.Item>\n                <Menu.Item key=\"6\"><Link to=\"/vue2\">vue2</Link></Menu.Item>\n                <Menu.Item key=\"7\"><Link to=\"/vue3\">vue3</Link></Menu.Item>\n                <Menu.Item key=\"8\"><Link to=\"/vue4\">vue4</Link></Menu.Item>\n              </SubMenu>\n              <SubMenu\n                key=\"sub3\"\n                title={\n                  <span>\n                  <Icon type=\"notification\" />\n                  <span>react</span>\n                </span>\n                }\n              >\n                <Menu.Item key=\"9\"><Link to=\"/react1\">react1</Link></Menu.Item>\n                <Menu.Item key=\"10\"><Link to=\"/react2\">react2</Link></Menu.Item>\n                <Menu.Item key=\"11\"><Link to=\"/react3\">react3</Link></Menu.Item>\n                <Menu.Item key=\"12\"><Link to=\"/react4\">react4</Link></Menu.Item>\n              </SubMenu>\n            </Menu>\n        </Sider>\n        <Layout>\n          <Header style={{ background: '#fff', padding: 0 }}>\n            <Icon\n              className=\"trigger\"\n              type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\n              onClick={this.toggle}\n            />\n          </Header>\n          <Content\n            style={{\n              margin: '24px 16px',\n              background: '#fff',\n              minHeight: 280,\n            }}\n          >\n            <Switch>\n              <Route path=\"/angular1\" component={MyAngular} />\n              <Route path=\"/vue1\" component={MyVue} />\n              <Route path=\"/:frame\" component={MyReact} />\n            </Switch>\n          </Content>\n        </Layout>\n      </BrowserRouter>\n    </Layout>)\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { observable, action, computed } from 'mobx';\n\nclass AddState {\n  @observable num1 = 0;\n  @observable num2 = 10;\n  \n  @action addNum1 = () => {\n    this.num1 ++;\n  };\n  @action addNum2 = () => {\n    this.num2 ++;\n  };\n  @computed get total() {\n    return this.num1 + this.num2;\n  }\n}\n\nconst addState = new AddState();\n\nexport { addState };\n","import 'react-app-polyfill/ie9';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'mobx-react';\nimport * as stores from './stories'\n\nReactDOM.render(\n  <Provider store={stores}>\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}